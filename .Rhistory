# Chunk 1: setup
knitr::opts_chunk$set(echo = TRUE, message=FALSE, warning=FALSE,
comment="", digits = 3, tidy = FALSE, prompt = FALSE, fig.align = 'center')
knitr::opts_knit$set(global.par = TRUE)
# Chunk 2: airplane-image
library(tidyverse)
library(magick)
airplane <- image_read("fig/airplane.jpeg")
airplane %>%
image_resize(200)
library(image.darknet)
labels_COCO <- readLines(
system.file(package="image.darknet", "include", "darknet", "data",
"coco.names")
)
yolo_cfg <- "DL_library//yolov2.cfg"
yolo_weights <- "DL_library/yolov2.weights"
yolo_COCO <- image_darknet_model(type = 'detect',
model = yolo_cfg,
weights = yolo_weights,
labels = labels_COCO)
# yolo_COCO$labels
image_darknet_detect(file = "fig/airplane.jpeg",
object = yolo_COCO,
threshold = 0.5)
x <- image_darknet_classify(file = "fig/airplane.jpeg", object = yolo_COCO)
x <- image_darknet_classify(type = 'classify',
file = "fig/airplane.jpeg", object = yolo_COCO)
x
? image_darknet_classify
library(image.darknet)
labels_COCO <- readLines(
system.file(package="image.darknet", "include", "darknet", "data",
"coco.names")
)
yolo_cfg <- "DL_library//yolov2.cfg"
yolo_weights <- "DL_library/yolov2.weights"
yolo_COCO <- image_darknet_model(type = 'classify',
model = yolo_cfg,
weights = yolo_weights,
labels = labels_COCO)
# yolo_COCO$labels
image_darknet_detect(file = "fig/airplane.jpeg",
object = yolo_COCO,
threshold = 0.5)
library(image.darknet)
labels_COCO <- readLines(
system.file(package="image.darknet", "include", "darknet", "data",
"coco.names")
)
yolo_cfg <- "DL_library//yolov2.cfg"
yolo_weights <- "DL_library/yolov2.weights"
yolo_COCO <- image_darknet_model(type = 'detect',
model = yolo_cfg,
weights = yolo_weights,
labels = labels_COCO)
# yolo_COCO$labels
image_darknet_detect(file = "fig/airplane.jpeg",
object = yolo_COCO,
threshold = 0.5)
detect_object <- function(filename){
pred <- image_darknet_detect(file = filename,
object = detect,
threshold = 0.19)
system(sprintf("mv predictions.png pred/%s",x))
pred
}
detect_object <- function(filename){
pred <- image_darknet_detect(file = filename,
object = detect,
threshold = 0.19)
}
detect_object("fig/airplane.jpeg")
detect_object <- function(filename){
pred <- image_darknet_detect(file = filename,
object = yolo_COCO,
threshold = 0.19)
}
detect_object("fig/airplane.jpeg")
library(Rcpp)
cppFunction('void redir() {FILE* F=freopen("capture.txt", "w+", stdout);}')
redir();
detect_object("fig/airplane.jpeg")
data.frame(txt=unlist(readLines("capture.txt"))) # This line reads in the output
redir()
result <- detect_object("fig/airplane.jpeg")
result
result <- lapply("fig/airplane.jpeg", detect_object)
data.frame(txt=unlist(readLines("capture.txt"))) # This line reads in the output
result
result <- map("fig/airplane.jpeg", detect_object)
result
tibble(text = readLines("capture.txt"))
tibble(text = read_lines("capture.txt"))
detect_object <- function(filename){
pred <- image_darknet_detect(file = filename,
object = yolo_COCO,
threshold = 0.19)
}
detect_object("fig/airplane.jpeg")
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("data/capture.txt", "w+", stdout);}')
redir()
result <- map("fig/airplane.jpeg", detect_object)
tibble(text = read_lines("data/capture.txt"))
system("rm capture.txt")
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("data/capture.txt", "w+", stdout);}')
redir()
result <- map("fig/airplane.jpeg", detect_object)
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("data/capture.txt", "w+", stdout);}')
redir()
result <- map("fig/airplane.jpeg", detect_object)
tibble(text = read_lines("data/capture.txt"))
system("rm data/capture.txt")
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
result <- map("fig/airplane.jpeg", detect_object)
tibble(text = read_lines("capture.txt"))
system("rm capture.txt")
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
result <- map("fig/airplane.jpeg", detect_object)
tibble(text = read_lines("capture.txt"))
result <- lapply("fig/airplane.jpeg", detect_object)
result <- map("fig/airplane.jpeg", detect_object)
system("rm capture.txt")
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
result <- map("fig/airplane.jpeg", detect_object)
tibble(text = read_lines("capture.txt"))
result <- lapply("fig/airplane.jpeg", detect_object)
result
lapply("fig/airplane.jpeg", image_darknet_detect, object = yolo_COCO)
tibble(text = read_lines("capture.txt"))
map("fig/airplane.jpeg", image_darknet_detect, object = yolo_COCO)
system("rm capture.txt")
## 결과값을 가로채는 CPP 함수
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
map("fig/airplane.jpeg", image_darknet_detect, object = yolo_COCO)
tibble(text = read_lines("capture.txt"))
system("rm capture.txt")
## 결과값을 가로채는 CPP 함수
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
lapply("fig/airplane.jpeg", image_darknet_detect, object = yolo_COCO, threshold = 0.5)
tibble(text = read_lines("capture.txt"))
system("rm capture.txt")
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
lapply("fig/airplane.jpeg", image_darknet_detect, object = yolo_COCO, threshold = 0.5)
## 데이터프레임 변환
tibble(text = read_lines("capture.txt"))
## 결과값을 가로채는 CPP 함수
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
lapply("fig/airplane.jpeg", image_darknet_detect, object = yolo_COCO)
## 데이터프레임 변환
tibble(text = read_lines("capture.txt"))
system("rm capture.txt")
## lapply 적용을 위한 함수: 매개변수 다수 전달
detect_object <- function(filename){
pred <- image_darknet_detect(file = filename,
object = yolo_COCO,
threshold = 0.19)
}
# detect_object("fig/airplane.jpeg")
## 결과값을 가로채는 함수
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
lapply("fig/airplane.jpeg", detect_object)
tibble(text = read_lines("capture.txt"))
system("rm capture.txt")
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
lapply("fig/airplane.jpeg", detect_object)
tibble(text = read_lines("capture.txt"))
## lapply 적용을 위한 함수: 매개변수 다수 전달
detect_object <- function(filename){
pred <- image_darknet_model(file = filename,
object = yolo_COCO,
threshold = 0.19)
}
# detect_object("fig/airplane.jpeg")
## 결과값을 가로채는 함수
library(Rcpp)
cppFunction('void redir() {FILE* F = freopen("capture.txt", "w+", stdout);}')
redir()
lapply("fig/airplane.jpeg", detect_object)
tibble(text = read_lines("capture.txt"))
system("rm capture.txt")
